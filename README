jquery/README
== Welcome to Rails Application with Google chart table tool  

   This application uses with google chart table for showing results in gridview .

== Description of Contents

   In general we need to show grid view results . For this we have to write some styles , design and coding part . But Google visual chart tools provides table tool for showing results in grid view .
  
I followed below posts and customize the code :
-----------------------------------------------
http://www.rorexperts.com/google-visualization-api-data-table-in-ruby-on-rails-t2383.html
http://www.rorexperts.com/google-data-table-using-google-visulization-api-t2384.html

   Google Visualization API :
------------------------------

This shows results in good format by the Google Visualization API .

What is this api ?
--------------------
It is a api shows results in piecharts, barcharts , data views tables

1. It shows results as a table(Grid view or two dimnesions) data retrives from a spread sheet or Json object with google visulaization data table settings also .

2. A common interface to expose data and provide data to visualizations on the web.

3. Easy to developers developing and reuse .

4. It supports sorting by default .

5. It supports pagination .

6. It is workinmg with Google Java script files , like api .



Why we use this  ?
--------------------

In general we are able to write code for data view or pie charts , but it has following uses , easy to use and fast development .

1. It is a api , so we have no burden .

2. It is free of cost .

3. It is customizable and over rightable styles.

4. It has cross browser compatability .

5. It supports grouping .

6. It supports pagination with number of rows per page from spread sheet or json format also .

7. It have good styles .

8. Insert html elements easily .

9. It supports all formats like arrow, bar , number ,date , number and string formats

10. It works fast comparitive to our application sorting or pagination.

11. It stores data as data cells like html table .

12. Each colomn must have same data type. 


Customizing the Google Data table :
------------------------------------

Before this I have created new application , configure database and created products scaffold . After all are working I created google data table .
I am showin results at  below url :
http://localhost:3000/items/products.

In controller :
------------------  
class ItemsController < ApplicationController
	# This for  supply data to google table .
	def products
	    @products = Product.all
	
	end	
end


Google Data Table :
------------------------

It shows data in two dimension . Here I am explaining about that topic with a example .

In Items/prodcucts.html.erb
-----------------------------
<script type="text/javascript" src="http://www.google.com/jsapi">
// This script is necessary for working with this api so include compulsary.
</script>
<script type="text/javascript">
google.load('visualization', '1', {packages: ['table']});
// Here I am using table view data . Actullay Google Visulization API supports piecharts , barcharts , time lines based on requirement we have to include compulsary .
</script>

<script type="text/javascript">
// below vsiulization and data variables are using later , here just declared
var visualization;
var data;

// Set options here
var options = {'showRowNumber': false};

// Create table with data in json format with google data table syntaxes .

function drawVisualization() {

// Create and populate the data table.

var dataAsJson =

{

// Declare column with id , label and data type .
// Here this data type apply for whole this column .

cols:[

{id:'A',label:'Product Name',type:'string'},
{id:'B',label:'Description',type:'string'},
{id:'C',label:'Price',type:'number'}],


// Here I customized view page with required details . If you have //static data follow below type is very easy .

// rows: [{c:[{v: 'Work'}, {v: 11}]},
// {c:[{v: 'Eat'}, {v: 2}]}
// ]

rows:[

<% @products.each_with_index do |product,i| %>

{c:[

// Here we are able to call helper methods easily .
{v:'<%= product.name %>'},
{v:'<%= product.descrtiption %>'},
{v:'<%= product.price %>'}
]}

// This loop for every row end s with comma and last row shold not have comma .

<% if !(@products.size - i == 1) %>
,
<% end %>

<% end %>
]};

// Below DataTable is a constructor it makes a mutable table with given values .

data = new google.visualization.DataTable(dataAsJson);

// Set paging configuration options
// Note: these options are changed by the UI controls in the example.
options['page'] = 'enable';
options['pageSize'] = 2;
options['pagingSymbols'] = {prev: 'prev', next: 'next'};
options['pagingButtonsConfiguration'] = 'auto';

// Create and draw the visualization.
// here add data table details and properties to given div name
visualization = new
google.visualization.Table(document.getElementById('table'));
draw();
}

// This is main function for fetching the all data and shows
function draw() {

visualization.draw(data, options);
}

// On laod page the above function invoke and display the data in table representation .

google.setOnLoadCallback(drawVisualization);

// sets the number of pages according to the user selection.
function setNumberOfPages(value) {
if (value) {
options['pageSize'] = parseInt(value, 10);
options['page'] = 'enable';
} else {
options['pageSize'] = null;
options['page'] = null;
}
draw();
}

// Sets custom paging symbols "Prev"/"Next"
function setCustomPagingButtons(toSet) {
options['pagingSymbols'] = toSet ? {next: 'next', prev: 'prev'} : null;
draw();
}

function setPagingButtonsConfiguration(value) {
options['pagingButtonsConfiguration'] = value;
draw();
}

</script>


<div style="margin-bottom: 10px; padding: 5px; border: 1px solid gray; background-color: buttonface;">
<span> Configure the paging options in the table</span><br />
<form action="">
<span style="font-size: 12px;">Number of rows:</span>
<select style="font-size: 12px" onchange="setNumberOfPages(this.value)">
<option value="">No paging</option>
<option value="1">1</option>
<option value="2">2</option>
<option value="5">5</option>
<option value="9">9</option>
<option selected="selected" value="10">10</option>
<option value="100">100</option>
</select>
<span style="padding-left: 5px; font-size: 12px;">Custom paging symbols </span>
<input type="checkbox" checked="checked" onclick="setCustomPagingButtons(this.checked)">
<span style="padding-left: 5px; font-size: 12px">Configure buttons enabled/disabled</span>
<select style="font-size: 12px" id='enable-paging-buttons' onchange='setPagingButtonsConfiguration(this.value)'>
<option value=''>Default (auto)</option>
<option value='prev'>prev</option>
<option value='next'>next</option>
<option value='both'>both</option>
</select>
</form>
</div>



<!--//Google Data table styles started-->
<div id="table"></div>
<!--//Google Data table styles ended-->

Customization completed start server .
c:\grid_view> rails s

Then open in browser :
http://localhost:3000/items/products
This url shows data in table format with sorting also .

Thanks & Regards,
PRASAD.

